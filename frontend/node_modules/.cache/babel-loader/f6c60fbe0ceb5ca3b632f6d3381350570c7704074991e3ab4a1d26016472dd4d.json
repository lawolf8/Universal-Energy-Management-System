{"ast":null,"code":"var _jsxFileName = \"/Users/lukewolf/Documents/GitHub/Universal-Energy-Management-System/frontend/src/components/AccountSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountSettings({\n  setShowAccountSettings,\n  userData = {\n    account: {\n      firstName: \"\",\n      lastName: \"\",\n      emails: [\"\"],\n      phoneNumbers: [\"\"],\n      address: \"\"\n    },\n    devices: []\n  }\n}) {\n  _s();\n  const [selectedTimes, setSelectedTimes] = useState({});\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [currentSelection, setCurrentSelection] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(false);\n  const [selectedDevices, setSelectedDevices] = useState({});\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  const hours = Array.from({\n    length: 24\n  }, (_, i) => `${i}:00`);\n\n  // Initialize form data with user data\n  const [formData, setFormData] = useState({\n    firstName: userData.account.firstName || \"\",\n    lastName: userData.account.lastName || \"\",\n    email: userData.account.emails[0] || \"\",\n    phoneNumber: userData.account.phoneNumbers[0] || \"\",\n    address: userData.account.address || \"\"\n  });\n\n  // Toggle device selection\n  const toggleDevice = deviceId => {\n    setSelectedDevices(prev => ({\n      ...prev,\n      [deviceId]: !prev[deviceId]\n    }));\n  };\n\n  // Helper function to get cell coordinates\n  const getCellCoordinates = (day, hour) => {\n    const dayIndex = daysOfWeek.indexOf(day);\n    const hourIndex = hours.indexOf(hour);\n    return {\n      dayIndex,\n      hourIndex\n    };\n  };\n\n  // Helper function to check if a cell is within selection range\n  const isCellInRange = (day, hour, start, end) => {\n    if (!start || !end) return false;\n    const cell = getCellCoordinates(day, hour);\n    const startCoords = getCellCoordinates(start.day, start.hour);\n    const endCoords = getCellCoordinates(end.day, end.hour);\n    const minDayIndex = Math.min(startCoords.dayIndex, endCoords.dayIndex);\n    const maxDayIndex = Math.max(startCoords.dayIndex, endCoords.dayIndex);\n    const minHourIndex = Math.min(startCoords.hourIndex, endCoords.hourIndex);\n    const maxHourIndex = Math.max(startCoords.hourIndex, endCoords.hourIndex);\n    return cell.dayIndex >= minDayIndex && cell.dayIndex <= maxDayIndex && cell.hourIndex >= minHourIndex && cell.hourIndex <= maxHourIndex;\n  };\n\n  // Handle mouse down to start selection\n  const handleMouseDown = (day, hour) => {\n    var _selectedTimes$day;\n    setIsSelecting(true);\n    setSelectionStart({\n      day,\n      hour\n    });\n    setCurrentSelection({\n      day,\n      hour\n    });\n    const currentValue = ((_selectedTimes$day = selectedTimes[day]) === null || _selectedTimes$day === void 0 ? void 0 : _selectedTimes$day[hour]) || false;\n    setSelectionValue(!currentValue);\n    setSelectedTimes(prev => {\n      const updated = {\n        ...prev\n      };\n      if (!updated[day]) updated[day] = {};\n      updated[day][hour] = !currentValue;\n      return updated;\n    });\n  };\n\n  // Handle mouse enter while selecting\n  const handleMouseEnter = (day, hour) => {\n    if (isSelecting) {\n      setCurrentSelection({\n        day,\n        hour\n      });\n    }\n  };\n\n  // Handle mouse up to end selection\n  const handleMouseUp = () => {\n    if (isSelecting && selectionStart && currentSelection) {\n      const updatedTimes = {\n        ...selectedTimes\n      };\n      daysOfWeek.forEach(day => {\n        hours.forEach(hour => {\n          if (isCellInRange(day, hour, selectionStart, currentSelection)) {\n            if (!updatedTimes[day]) updatedTimes[day] = {};\n            updatedTimes[day][hour] = selectionValue;\n          }\n        });\n      });\n      setSelectedTimes(updatedTimes);\n    }\n    setIsSelecting(false);\n    setSelectionStart(null);\n    setCurrentSelection(null);\n  };\n\n  // Handle save\n  const handleSave = () => {\n    // Here you would typically save both the schedule and always-on devices\n    console.log(\"Saving schedule:\", selectedTimes);\n    console.log(\"Saving always-on devices:\", selectedDevices);\n    console.log(\"Saving form data:\", formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded shadow-md overflow-y-auto h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-gray-500 text-white p-2 rounded mb-4\",\n      onClick: () => setShowAccountSettings(false),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Account Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"p-2 border rounded w-full mb-2\",\n          value: formData.firstName,\n          onChange: e => setFormData({\n            ...formData,\n            firstName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"p-2 border rounded w-full mb-2\",\n          value: formData.lastName,\n          onChange: e => setFormData({\n            ...formData,\n            lastName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"p-2 border rounded w-full mb-2\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"p-2 border rounded w-full mb-2\",\n          value: formData.phoneNumber,\n          onChange: e => setFormData({\n            ...formData,\n            phoneNumber: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"p-2 border rounded w-full mb-2\",\n          value: formData.address,\n          onChange: e => setFormData({\n            ...formData,\n            address: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mt-6 mb-2\",\n      children: \"Work Schedule (Click and Drag to Select):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-auto bg-gray-200 p-4 rounded-lg\",\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: \"Click and drag to select/unselect multiple hours when you are not home.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-bold\",\n          children: day\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), hours.map((hour, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 gap-2 mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-center\",\n          children: hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), daysOfWeek.map((day, colIndex) => {\n          var _selectedTimes$day2;\n          const isSelected = ((_selectedTimes$day2 = selectedTimes[day]) === null || _selectedTimes$day2 === void 0 ? void 0 : _selectedTimes$day2[hour]) || false;\n          const isInSelectionRange = isSelecting && isCellInRange(day, hour, selectionStart, currentSelection);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `border p-2 text-center cursor-pointer select-none\n                    ${isSelected ? \"bg-red-500 text-white\" : \"hover:bg-gray-300\"}\n                    ${isInSelectionRange ? \"bg-red-300\" : \"\"}`,\n            onMouseDown: () => handleMouseDown(day, hour),\n            onMouseEnter: () => handleMouseEnter(day, hour),\n            children: hour\n          }, `${day}-${hour}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this);\n        })]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mt-6 mb-2\",\n      children: \"Always-On Devices:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-200 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: \"Select devices that should always remain on:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-2\",\n        children: userData.devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded cursor-pointer ${selectedDevices[device.id] ? 'bg-green-500 text-white' : 'bg-white hover:bg-gray-100'}`,\n          onClick: () => toggleDevice(device.id),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold\",\n                children: device.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: device.room\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: [device.watts, \"W\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: [\"$\", device.cost, \"/hr\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, device.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 text-white p-2 rounded mt-4 w-full\",\n      onClick: handleSave,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountSettings, \"EBTrwVzhnbMBDcVO7JQ/7xe2RV0=\");\n_c = AccountSettings;\nexport default AccountSettings;\nvar _c;\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AccountSettings","setShowAccountSettings","userData","account","firstName","lastName","emails","phoneNumbers","address","devices","_s","selectedTimes","setSelectedTimes","isSelecting","setIsSelecting","selectionStart","setSelectionStart","currentSelection","setCurrentSelection","selectionValue","setSelectionValue","selectedDevices","setSelectedDevices","daysOfWeek","hours","Array","from","length","_","i","formData","setFormData","email","phoneNumber","toggleDevice","deviceId","prev","getCellCoordinates","day","hour","dayIndex","indexOf","hourIndex","isCellInRange","start","end","cell","startCoords","endCoords","minDayIndex","Math","min","maxDayIndex","max","minHourIndex","maxHourIndex","handleMouseDown","_selectedTimes$day","currentValue","updated","handleMouseEnter","handleMouseUp","updatedTimes","forEach","handleSave","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onMouseUp","onMouseLeave","map","index","rowIndex","colIndex","_selectedTimes$day2","isSelected","isInSelectionRange","onMouseDown","onMouseEnter","device","id","name","room","watts","cost","_c","$RefreshReg$"],"sources":["/Users/lukewolf/Documents/GitHub/Universal-Energy-Management-System/frontend/src/components/AccountSettings.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction AccountSettings({ setShowAccountSettings, userData = {\n  account: {\n    firstName: \"\",\n    lastName: \"\",\n    emails: [\"\"],\n    phoneNumbers: [\"\"],\n    address: \"\",\n  },\n  devices: []\n} }) {\n  const [selectedTimes, setSelectedTimes] = useState({});\n  const [isSelecting, setIsSelecting] = useState(false);\n  const [selectionStart, setSelectionStart] = useState(null);\n  const [currentSelection, setCurrentSelection] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(false);\n  const [selectedDevices, setSelectedDevices] = useState({});\n\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  const hours = Array.from({ length: 24 }, (_, i) => `${i}:00`);\n\n  // Initialize form data with user data\n  const [formData, setFormData] = useState({\n    firstName: userData.account.firstName || \"\",\n    lastName: userData.account.lastName || \"\",\n    email: userData.account.emails[0] || \"\",\n    phoneNumber: userData.account.phoneNumbers[0] || \"\",\n    address: userData.account.address || \"\",\n  });\n\n  // Toggle device selection\n  const toggleDevice = (deviceId) => {\n    setSelectedDevices(prev => ({\n      ...prev,\n      [deviceId]: !prev[deviceId]\n    }));\n  };\n\n  // Helper function to get cell coordinates\n  const getCellCoordinates = (day, hour) => {\n    const dayIndex = daysOfWeek.indexOf(day);\n    const hourIndex = hours.indexOf(hour);\n    return { dayIndex, hourIndex };\n  }\n\n  // Helper function to check if a cell is within selection range\n  const isCellInRange = (day, hour, start, end) => {\n    if (!start || !end) return false;\n    \n    const cell = getCellCoordinates(day, hour);\n    const startCoords = getCellCoordinates(start.day, start.hour);\n    const endCoords = getCellCoordinates(end.day, end.hour);\n\n    const minDayIndex = Math.min(startCoords.dayIndex, endCoords.dayIndex);\n    const maxDayIndex = Math.max(startCoords.dayIndex, endCoords.dayIndex);\n    const minHourIndex = Math.min(startCoords.hourIndex, endCoords.hourIndex);\n    const maxHourIndex = Math.max(startCoords.hourIndex, endCoords.hourIndex);\n\n    return (\n      cell.dayIndex >= minDayIndex &&\n      cell.dayIndex <= maxDayIndex &&\n      cell.hourIndex >= minHourIndex &&\n      cell.hourIndex <= maxHourIndex\n    );\n  };\n\n  // Handle mouse down to start selection\n  const handleMouseDown = (day, hour) => {\n    setIsSelecting(true);\n    setSelectionStart({ day, hour });\n    setCurrentSelection({ day, hour });\n    const currentValue = selectedTimes[day]?.[hour] || false;\n    setSelectionValue(!currentValue);\n    setSelectedTimes(prev => {\n      const updated = { ...prev };\n      if (!updated[day]) updated[day] = {};\n      updated[day][hour] = !currentValue;\n      return updated;\n    });\n  };\n\n  // Handle mouse enter while selecting\n  const handleMouseEnter = (day, hour) => {\n    if (isSelecting) {\n      setCurrentSelection({ day, hour });\n    }\n  };\n\n  // Handle mouse up to end selection\n  const handleMouseUp = () => {\n    if (isSelecting && selectionStart && currentSelection) {\n      const updatedTimes = { ...selectedTimes };\n      daysOfWeek.forEach(day => {\n        hours.forEach(hour => {\n          if (isCellInRange(day, hour, selectionStart, currentSelection)) {\n            if (!updatedTimes[day]) updatedTimes[day] = {};\n            updatedTimes[day][hour] = selectionValue;\n          }\n        });\n      });\n      setSelectedTimes(updatedTimes);\n    }\n    setIsSelecting(false);\n    setSelectionStart(null);\n    setCurrentSelection(null);\n  };\n\n  // Handle save\n  const handleSave = () => {\n    // Here you would typically save both the schedule and always-on devices\n    console.log(\"Saving schedule:\", selectedTimes);\n    console.log(\"Saving always-on devices:\", selectedDevices);\n    console.log(\"Saving form data:\", formData);\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded shadow-md overflow-y-auto h-screen\">\n      {/* Back Button */}\n      <button\n        className=\"bg-gray-500 text-white p-2 rounded mb-4\"\n        onClick={() => setShowAccountSettings(false)}\n      >\n        Back\n      </button>\n\n      {/* Header */}\n      <h2 className=\"text-2xl font-bold mb-4\">Account Settings</h2>\n\n      {/* Personal Information */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block mb-2\">First Name:</label>\n          <input \n            type=\"text\" \n            className=\"p-2 border rounded w-full mb-2\"\n            value={formData.firstName}\n            onChange={(e) => setFormData({...formData, firstName: e.target.value})}\n          />\n\n          <label className=\"block mb-2\">Last Name:</label>\n          <input \n            type=\"text\" \n            className=\"p-2 border rounded w-full mb-2\"\n            value={formData.lastName}\n            onChange={(e) => setFormData({...formData, lastName: e.target.value})}\n          />\n\n          <label className=\"block mb-2\">Email:</label>\n          <input \n            type=\"email\" \n            className=\"p-2 border rounded w-full mb-2\"\n            value={formData.email}\n            onChange={(e) => setFormData({...formData, email: e.target.value})}\n          />\n\n          <label className=\"block mb-2\">Phone Number:</label>\n          <input \n            type=\"text\" \n            className=\"p-2 border rounded w-full mb-2\"\n            value={formData.phoneNumber}\n            onChange={(e) => setFormData({...formData, phoneNumber: e.target.value})}\n          />\n        </div>\n\n        {/* Address Section */}\n        <div>\n          <label className=\"block mb-2\">Address:</label>\n          <input \n            type=\"text\" \n            className=\"p-2 border rounded w-full mb-2\"\n            value={formData.address}\n            onChange={(e) => setFormData({...formData, address: e.target.value})}\n          />\n        </div>\n      </div>\n\n      {/* Work Schedule Table */}\n      <h3 className=\"text-xl font-semibold mt-6 mb-2\">Work Schedule (Click and Drag to Select):</h3>\n      <div \n        className=\"overflow-auto bg-gray-200 p-4 rounded-lg\"\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n      >\n        <p className=\"mb-2\">Click and drag to select/unselect multiple hours when you are not home.</p>\n        <div className=\"grid grid-cols-8 gap-2\">\n          <div></div>\n          {daysOfWeek.map((day, index) => (\n            <div key={index} className=\"text-center font-bold\">{day}</div>\n          ))}\n        </div>\n\n        {hours.map((hour, rowIndex) => (\n          <div key={rowIndex} className=\"grid grid-cols-8 gap-2 mt-1\">\n            <div className=\"font-bold text-center\">{hour}</div>\n            {daysOfWeek.map((day, colIndex) => {\n              const isSelected = selectedTimes[day]?.[hour] || false;\n              const isInSelectionRange = isSelecting && \n                isCellInRange(day, hour, selectionStart, currentSelection);\n              \n              return (\n                <div\n                  key={`${day}-${hour}`}\n                  className={`border p-2 text-center cursor-pointer select-none\n                    ${isSelected ? \"bg-red-500 text-white\" : \"hover:bg-gray-300\"}\n                    ${isInSelectionRange ? \"bg-red-300\" : \"\"}`}\n                  onMouseDown={() => handleMouseDown(day, hour)}\n                  onMouseEnter={() => handleMouseEnter(day, hour)}\n                >\n                  {hour}\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n\n      {/* Always-On Devices Section */}\n      <h3 className=\"text-xl font-semibold mt-6 mb-2\">Always-On Devices:</h3>\n      <div className=\"bg-gray-200 p-4 rounded-lg\">\n        <p className=\"mb-2\">Select devices that should always remain on:</p>\n        <div className=\"grid gap-2\">\n          {userData.devices.map(device => (\n            <div \n              key={device.id}\n              className={`p-4 rounded cursor-pointer ${\n                selectedDevices[device.id] \n                  ? 'bg-green-500 text-white' \n                  : 'bg-white hover:bg-gray-100'\n              }`}\n              onClick={() => toggleDevice(device.id)}\n            >\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <h4 className=\"font-semibold\">{device.name}</h4>\n                  <p className=\"text-sm\">{device.room}</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm\">{device.watts}W</p>\n                  <p className=\"text-sm\">${device.cost}/hr</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Save Button */}\n      <button \n        className=\"bg-green-500 text-white p-2 rounded mt-4 w-full\"\n        onClick={handleSave}\n      >\n        Save Changes\n      </button>\n    </div>\n  );\n}\n\nexport default AccountSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
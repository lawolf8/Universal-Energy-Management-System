{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _GridItem = _interopRequireDefault(require(\"./GridItem\"));\nvar _ReactGridLayoutPropTypes = _interopRequireDefault(require(\"./ReactGridLayoutPropTypes\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  DragOverEvent,\n  Layout,\n  DroppingPosition,\n  LayoutItem\n} from \"./utils\";*/\n// Types\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: type State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem,\n  resizing: boolean,\n  droppingDOMNode: ?ReactElement<any>,\n  droppingPosition?: DroppingPosition,\n  // Mirrored props\n  children: ReactChildrenArray<ReactElement<any>>,\n  compactType?: CompactType,\n  propsLayout?: Layout\n};*/\n/*:: import type { Props, DefaultProps } from \"./ReactGridLayoutPropTypes\";*/\n// End Types\nconst layoutClassName = \"react-grid-layout\";\nlet isFirefox = false;\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\ntry {\n  isFirefox = /firefox/i.test(navigator.userAgent);\n} catch (e) {\n  /* Ignore */\n}\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nclass ReactGridLayout extends React.Component /*:: <Props, State>*/ {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      activeDrag: null,\n      layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n      // Legacy support for verticalCompact: false\n      (0, _utils.compactType)(this.props), this.props.allowOverlap),\n      mounted: false,\n      oldDragItem: null,\n      oldLayout: null,\n      oldResizeItem: null,\n      resizing: false,\n      droppingDOMNode: null,\n      children: []\n    });\n    _defineProperty(this, \"dragEnterCounter\", 0);\n    /**\n     * When dragging starts\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStart\", (i /*: string*/, x /*: number*/, y /*: number*/, _ref /*:: */) => {\n      let {\n        e,\n        node\n      } /*: GridDragEvent*/ = _ref /*: GridDragEvent*/;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n      this.setState({\n        oldDragItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: layout,\n        activeDrag: placeholder\n      });\n      return this.props.onDragStart(layout, l, l, null, e, node);\n    });\n    /**\n     * Each drag movement create a new dragelement and move the element to the dragged location\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDrag\", (i, x, y, _ref2) => {\n      let {\n        e,\n        node\n      } = _ref2;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        allowOverlap,\n        preventCollision\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n\n      // Move the element to the dragged location.\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n      this.setState({\n        layout: allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    /**\n     * When dragging stops, figure out which position the element is closest to and update its x and y.\n     * @param  {String} i Index of the child.\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStop\", (i, x, y, _ref3) => {\n      let {\n        e,\n        node\n      } = _ref3;\n      if (!this.state.activeDrag) return;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Move the element here\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onDragStop(newLayout, oldDragItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    _defineProperty(this, \"onResizeStart\", (i, w, h, _ref4) => {\n      let {\n        e,\n        node\n      } = _ref4;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n      this.setState({\n        oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: this.state.layout,\n        resizing: true\n      });\n      this.props.onResizeStart(layout, l, l, null, e, node);\n    });\n    _defineProperty(this, \"onResize\", (i, w, h, _ref5) => {\n      let {\n        e,\n        node,\n        size,\n        handle\n      } = _ref5;\n      const {\n        oldResizeItem\n      } = this.state;\n      const {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      let shouldMoveItem = false;\n      let finalLayout;\n      let x;\n      let y;\n      const [newLayout, l] = (0, _utils.withLayoutItem)(layout, i, l => {\n        let hasCollisions;\n        x = l.x;\n        y = l.y;\n        if ([\"sw\", \"w\", \"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n          if ([\"sw\", \"nw\", \"w\"].indexOf(handle) !== -1) {\n            x = l.x + (l.w - w);\n            w = l.x !== x && x < 0 ? l.w : w;\n            x = x < 0 ? 0 : x;\n          }\n          if ([\"ne\", \"n\", \"nw\"].indexOf(handle) !== -1) {\n            y = l.y + (l.h - h);\n            h = l.y !== y && y < 0 ? l.h : h;\n            y = y < 0 ? 0 : y;\n          }\n          shouldMoveItem = true;\n        }\n\n        // Something like quad tree should be used\n        // to find collisions faster\n        if (preventCollision && !allowOverlap) {\n          const collisions = (0, _utils.getAllCollisions)(layout, {\n            ...l,\n            w,\n            h,\n            x,\n            y\n          }).filter(layoutItem => layoutItem.i !== l.i);\n          hasCollisions = collisions.length > 0;\n\n          // If we're colliding, we need adjust the placeholder.\n          if (hasCollisions) {\n            // Reset layoutItem dimensions if there were collisions\n            y = l.y;\n            h = l.h;\n            x = l.x;\n            w = l.w;\n            shouldMoveItem = false;\n          }\n        }\n        l.w = w;\n        l.h = h;\n        return l;\n      });\n\n      // Shouldn't ever happen, but typechecking makes it necessary\n      if (!l) return;\n      finalLayout = newLayout;\n      if (shouldMoveItem) {\n        // Move the element to the new position.\n        const isUserAction = true;\n        finalLayout = (0, _utils.moveElement)(newLayout, l, x, y, isUserAction, this.props.preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      }\n\n      // Create placeholder element (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        static: true,\n        i: i\n      };\n      this.props.onResize(finalLayout, oldResizeItem, l, placeholder, e, node);\n\n      // Re-compact the newLayout and set the drag placeholder.\n      this.setState({\n        layout: allowOverlap ? finalLayout : (0, _utils.compact)(finalLayout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    _defineProperty(this, \"onResizeStop\", (i, w, h, _ref6) => {\n      let {\n        e,\n        node\n      } = _ref6;\n      const {\n        layout,\n        oldResizeItem\n      } = this.state;\n      const {\n        cols,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onResizeStop(newLayout, oldResizeItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldResizeItem: null,\n        oldLayout: null,\n        resizing: false\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    // Called while dragging an element. Part of browser native drag/drop API.\n    // Native event target might be the layout itself, or an element within the layout.\n    _defineProperty(this, \"onDragOver\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n\n      // we should ignore events from layout's children in Firefox\n      // to avoid unpredictable jumping of a dropping placeholder\n      // FIXME remove this hack\n      if (isFirefox &&\n      // $FlowIgnore can't figure this out\n      !e.nativeEvent.target?.classList.contains(layoutClassName)) {\n        return false;\n      }\n      const {\n        droppingItem,\n        onDropDragOver,\n        margin,\n        cols,\n        rowHeight,\n        maxRows,\n        width,\n        containerPadding,\n        transformScale\n      } = this.props;\n      // Allow user to customize the dropping item or short-circuit the drop based on the results\n      // of the `onDragOver(e: Event)` callback.\n      const onDragOverResult = onDropDragOver?.(e);\n      if (onDragOverResult === false) {\n        if (this.state.droppingDOMNode) {\n          this.removeDroppingPlaceholder();\n        }\n        return false;\n      }\n      const finalDroppingItem = {\n        ...droppingItem,\n        ...onDragOverResult\n      };\n      const {\n        layout\n      } = this.state;\n\n      // $FlowIgnore missing def\n      const gridRect = e.currentTarget.getBoundingClientRect(); // The grid's position in the viewport\n\n      // Calculate the mouse position relative to the grid\n      const layerX = e.clientX - gridRect.left;\n      const layerY = e.clientY - gridRect.top;\n      const droppingPosition = {\n        left: layerX / transformScale,\n        top: layerY / transformScale,\n        e\n      };\n      if (!this.state.droppingDOMNode) {\n        const positionParams /*: PositionParams*/ = {\n          cols,\n          margin,\n          maxRows,\n          rowHeight,\n          containerWidth: width,\n          containerPadding: containerPadding || margin\n        };\n        const calculatedPosition = (0, _calculateUtils.calcXY)(positionParams, layerY, layerX, finalDroppingItem.w, finalDroppingItem.h);\n        this.setState({\n          droppingDOMNode: /*#__PURE__*/React.createElement(\"div\", {\n            key: finalDroppingItem.i\n          }),\n          droppingPosition,\n          layout: [...layout, {\n            ...finalDroppingItem,\n            x: calculatedPosition.x,\n            y: calculatedPosition.y,\n            static: false,\n            isDraggable: true\n          }]\n        });\n      } else if (this.state.droppingPosition) {\n        const {\n          left,\n          top\n        } = this.state.droppingPosition;\n        const shouldUpdatePosition = left != layerX || top != layerY;\n        if (shouldUpdatePosition) {\n          this.setState({\n            droppingPosition\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"removeDroppingPlaceholder\", () => {\n      const {\n        droppingItem,\n        cols\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const newLayout = (0, _utils.compact)(layout.filter(l => l.i !== droppingItem.i), (0, _utils.compactType)(this.props), cols, this.props.allowOverlap);\n      this.setState({\n        layout: newLayout,\n        droppingDOMNode: null,\n        activeDrag: null,\n        droppingPosition: undefined\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter--;\n\n      // onDragLeave can be triggered on each layout's child.\n      // But we know that count of dragEnter and dragLeave events\n      // will be balanced after leaving the layout's container\n      // so we can increase and decrease count of dragEnter and\n      // when it'll be equal to 0 we'll remove the placeholder\n      if (this.dragEnterCounter === 0) {\n        this.removeDroppingPlaceholder();\n      }\n    });\n    _defineProperty(this, \"onDragEnter\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter++;\n    });\n    _defineProperty(this, \"onDrop\", (e /*: Event*/) => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      const {\n        droppingItem\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const item = layout.find(l => l.i === droppingItem.i);\n\n      // reset dragEnter counter on drop\n      this.dragEnterCounter = 0;\n      this.removeDroppingPlaceholder();\n      this.props.onDrop(layout, item, e);\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n  static getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State> | null*/{\n    let newLayoutBase;\n    if (prevState.activeDrag) {\n      return null;\n    }\n\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _fastEquals.deepEqual)(nextProps.layout, prevState.propsLayout) || nextProps.compactType !== prevState.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(nextProps.children, prevState.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = prevState.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, (0, _utils.compactType)(nextProps), nextProps.allowOverlap);\n      return {\n        layout: newLayout,\n        // We need to save these props to state for using\n        // getDerivedStateFromProps instead of componentDidMount (in which we would get extra rerender)\n        compactType: nextProps.compactType,\n        children: nextProps.children,\n        propsLayout: nextProps.layout\n      };\n    }\n    return null;\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    return (\n      // NOTE: this is almost always unequal. Therefore the only way to get better performance\n      // from SCU is if the user intentionally memoizes children. If they do, and they can\n      // handle changes properly, performance will increase.\n      this.props.children !== nextProps.children || !(0, _utils.fastRGLPropsEqual)(this.props, nextProps, _fastEquals.deepEqual) || this.state.activeDrag !== nextState.activeDrag || this.state.mounted !== nextState.mounted || this.state.droppingPosition !== nextState.droppingPosition\n    );\n  }\n  componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n    if (!this.state.activeDrag) {\n      const newLayout = this.state.layout;\n      const oldLayout = prevState.layout;\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() /*: ?string*/{\n    if (!this.props.autoSize) return;\n    const nbRow = (0, _utils.bottom)(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  }\n  onLayoutMaybeChanged(newLayout /*: Layout*/, oldLayout /*: ?Layout*/) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _fastEquals.deepEqual)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder() /*: ?ReactElement<any>*/{\n    const {\n      activeDrag\n    } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms,\n      transformScale\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: `react-grid-placeholder ${this.state.resizing ? \"placeholder-resizing\" : \"\"}`,\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      isBounded: false,\n      useCSSTransforms: useCSSTransforms,\n      transformScale: transformScale\n    }, /*#__PURE__*/React.createElement(\"div\", null));\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child /*: ReactElement<any>*/, isDroppingItem /*: boolean*/) /*: ?ReactElement<any>*/{\n    if (!child || !child.key) return;\n    const l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      isBounded,\n      useCSSTransforms,\n      transformScale,\n      draggableCancel,\n      draggableHandle,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const {\n      mounted,\n      droppingPosition\n    } = this.state;\n\n    // Determine user manipulations possible.\n    // If an item is static, it can't be manipulated by default.\n    // Any properties defined directly on the grid item will take precedence.\n    const draggable = typeof l.isDraggable === \"boolean\" ? l.isDraggable : !l.static && isDraggable;\n    const resizable = typeof l.isResizable === \"boolean\" ? l.isResizable : !l.static && isResizable;\n    const resizeHandlesOptions = l.resizeHandles || resizeHandles;\n\n    // isBounded set on child if set on parent, and child is not explicitly false\n    const bounded = draggable && isBounded && l.isBounded !== false;\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      isBounded: bounded,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      transformScale: transformScale,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      static: l.static,\n      droppingPosition: isDroppingItem ? droppingPosition : undefined,\n      resizeHandles: resizeHandlesOptions,\n      resizeHandle: resizeHandle\n    }, child);\n  }\n  render() /*: React.Element<\"div\">*/{\n    const {\n      className,\n      style,\n      isDroppable,\n      innerRef\n    } = this.props;\n    const mergedClassName = (0, _clsx.default)(layoutClassName, className);\n    const mergedStyle = {\n      height: this.containerHeight(),\n      ...style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: innerRef,\n      className: mergedClassName,\n      style: mergedStyle,\n      onDrop: isDroppable ? this.onDrop : _utils.noop,\n      onDragLeave: isDroppable ? this.onDragLeave : _utils.noop,\n      onDragEnter: isDroppable ? this.onDragEnter : _utils.noop,\n      onDragOver: isDroppable ? this.onDragOver : _utils.noop\n    }, React.Children.map(this.props.children, child => this.processGridItem(child)), isDroppable && this.state.droppingDOMNode && this.processGridItem(this.state.droppingDOMNode, true), this.placeholder());\n  }\n}\nexports.default = ReactGridLayout;\n// TODO publish internal ReactClass displayName transform\n_defineProperty(ReactGridLayout, \"displayName\", \"ReactGridLayout\");\n// Refactored to another module to make way for preval\n_defineProperty(ReactGridLayout, \"propTypes\", _ReactGridLayoutPropTypes.default);\n_defineProperty(ReactGridLayout, \"defaultProps\", {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isBounded: false,\n  isDraggable: true,\n  isResizable: true,\n  allowOverlap: false,\n  isDroppable: false,\n  useCSSTransforms: true,\n  transformScale: 1,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  droppingItem: {\n    i: \"__dropping-elem__\",\n    h: 1,\n    w: 1\n  },\n  resizeHandles: [\"se\"],\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop,\n  onDrop: _utils.noop,\n  onDropDragOver: _utils.noop\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","default","React","_interopRequireWildcard","require","_fastEquals","_clsx","_interopRequireDefault","_utils","_calculateUtils","_GridItem","_ReactGridLayoutPropTypes","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_defineProperty","key","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","layoutClassName","isFirefox","test","navigator","userAgent","ReactGridLayout","Component","constructor","arguments","activeDrag","layout","synchronizeLayoutWithChildren","props","children","cols","compactType","allowOverlap","mounted","oldDragItem","oldLayout","oldResizeItem","resizing","droppingDOMNode","x","y","_ref","node","state","l","getLayoutItem","placeholder","w","h","setState","cloneLayoutItem","onDragStart","_ref2","preventCollision","isUserAction","moveElement","onDrag","compact","_ref3","newLayout","onDragStop","onLayoutMaybeChanged","_ref4","onResizeStart","_ref5","size","handle","shouldMoveItem","finalLayout","withLayoutItem","hasCollisions","indexOf","collisions","getAllCollisions","filter","layoutItem","length","static","onResize","_ref6","onResizeStop","preventDefault","stopPropagation","nativeEvent","target","classList","contains","droppingItem","onDropDragOver","margin","rowHeight","maxRows","width","containerPadding","transformScale","onDragOverResult","removeDroppingPlaceholder","finalDroppingItem","gridRect","currentTarget","getBoundingClientRect","layerX","clientX","left","layerY","clientY","top","droppingPosition","positionParams","containerWidth","calculatedPosition","calcXY","createElement","isDraggable","shouldUpdatePosition","dragEnterCounter","item","find","onDrop","componentDidMount","getDerivedStateFromProps","nextProps","prevState","newLayoutBase","deepEqual","propsLayout","childrenEqual","shouldComponentUpdate","nextState","fastRGLPropsEqual","componentDidUpdate","prevProps","containerHeight","autoSize","nbRow","bottom","containerPaddingY","onLayoutChange","useCSSTransforms","className","isResizable","isBounded","processGridItem","child","isDroppingItem","draggableCancel","draggableHandle","resizeHandles","resizeHandle","draggable","resizable","resizeHandlesOptions","bounded","cancel","usePercentages","minH","minW","maxH","maxW","render","style","isDroppable","innerRef","mergedClassName","mergedStyle","height","ref","noop","onDragLeave","onDragEnter","onDragOver","Children","map","Infinity","verticalCompact"],"sources":["C:/Users/Luke Wolf/Desktop/repositories/Universal-Energy-Management-System/frontend/node_modules/react-grid-layout/build/ReactGridLayout.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _GridItem = _interopRequireDefault(require(\"./GridItem\"));\nvar _ReactGridLayoutPropTypes = _interopRequireDefault(require(\"./ReactGridLayoutPropTypes\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  DragOverEvent,\n  Layout,\n  DroppingPosition,\n  LayoutItem\n} from \"./utils\";*/\n// Types\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: type State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem,\n  resizing: boolean,\n  droppingDOMNode: ?ReactElement<any>,\n  droppingPosition?: DroppingPosition,\n  // Mirrored props\n  children: ReactChildrenArray<ReactElement<any>>,\n  compactType?: CompactType,\n  propsLayout?: Layout\n};*/\n/*:: import type { Props, DefaultProps } from \"./ReactGridLayoutPropTypes\";*/\n// End Types\nconst layoutClassName = \"react-grid-layout\";\nlet isFirefox = false;\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\ntry {\n  isFirefox = /firefox/i.test(navigator.userAgent);\n} catch (e) {\n  /* Ignore */\n}\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nclass ReactGridLayout extends React.Component /*:: <Props, State>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      activeDrag: null,\n      layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n      // Legacy support for verticalCompact: false\n      (0, _utils.compactType)(this.props), this.props.allowOverlap),\n      mounted: false,\n      oldDragItem: null,\n      oldLayout: null,\n      oldResizeItem: null,\n      resizing: false,\n      droppingDOMNode: null,\n      children: []\n    });\n    _defineProperty(this, \"dragEnterCounter\", 0);\n    /**\n     * When dragging starts\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStart\", (i /*: string*/, x /*: number*/, y /*: number*/, _ref /*:: */) => {\n      let {\n        e,\n        node\n      } /*: GridDragEvent*/ = _ref /*: GridDragEvent*/;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n      this.setState({\n        oldDragItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: layout,\n        activeDrag: placeholder\n      });\n      return this.props.onDragStart(layout, l, l, null, e, node);\n    });\n    /**\n     * Each drag movement create a new dragelement and move the element to the dragged location\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDrag\", (i, x, y, _ref2) => {\n      let {\n        e,\n        node\n      } = _ref2;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        allowOverlap,\n        preventCollision\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n\n      // Move the element to the dragged location.\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n      this.setState({\n        layout: allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    /**\n     * When dragging stops, figure out which position the element is closest to and update its x and y.\n     * @param  {String} i Index of the child.\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStop\", (i, x, y, _ref3) => {\n      let {\n        e,\n        node\n      } = _ref3;\n      if (!this.state.activeDrag) return;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Move the element here\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onDragStop(newLayout, oldDragItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    _defineProperty(this, \"onResizeStart\", (i, w, h, _ref4) => {\n      let {\n        e,\n        node\n      } = _ref4;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n      this.setState({\n        oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: this.state.layout,\n        resizing: true\n      });\n      this.props.onResizeStart(layout, l, l, null, e, node);\n    });\n    _defineProperty(this, \"onResize\", (i, w, h, _ref5) => {\n      let {\n        e,\n        node,\n        size,\n        handle\n      } = _ref5;\n      const {\n        oldResizeItem\n      } = this.state;\n      const {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      let shouldMoveItem = false;\n      let finalLayout;\n      let x;\n      let y;\n      const [newLayout, l] = (0, _utils.withLayoutItem)(layout, i, l => {\n        let hasCollisions;\n        x = l.x;\n        y = l.y;\n        if ([\"sw\", \"w\", \"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n          if ([\"sw\", \"nw\", \"w\"].indexOf(handle) !== -1) {\n            x = l.x + (l.w - w);\n            w = l.x !== x && x < 0 ? l.w : w;\n            x = x < 0 ? 0 : x;\n          }\n          if ([\"ne\", \"n\", \"nw\"].indexOf(handle) !== -1) {\n            y = l.y + (l.h - h);\n            h = l.y !== y && y < 0 ? l.h : h;\n            y = y < 0 ? 0 : y;\n          }\n          shouldMoveItem = true;\n        }\n\n        // Something like quad tree should be used\n        // to find collisions faster\n        if (preventCollision && !allowOverlap) {\n          const collisions = (0, _utils.getAllCollisions)(layout, {\n            ...l,\n            w,\n            h,\n            x,\n            y\n          }).filter(layoutItem => layoutItem.i !== l.i);\n          hasCollisions = collisions.length > 0;\n\n          // If we're colliding, we need adjust the placeholder.\n          if (hasCollisions) {\n            // Reset layoutItem dimensions if there were collisions\n            y = l.y;\n            h = l.h;\n            x = l.x;\n            w = l.w;\n            shouldMoveItem = false;\n          }\n        }\n        l.w = w;\n        l.h = h;\n        return l;\n      });\n\n      // Shouldn't ever happen, but typechecking makes it necessary\n      if (!l) return;\n      finalLayout = newLayout;\n      if (shouldMoveItem) {\n        // Move the element to the new position.\n        const isUserAction = true;\n        finalLayout = (0, _utils.moveElement)(newLayout, l, x, y, isUserAction, this.props.preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      }\n\n      // Create placeholder element (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        static: true,\n        i: i\n      };\n      this.props.onResize(finalLayout, oldResizeItem, l, placeholder, e, node);\n\n      // Re-compact the newLayout and set the drag placeholder.\n      this.setState({\n        layout: allowOverlap ? finalLayout : (0, _utils.compact)(finalLayout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    _defineProperty(this, \"onResizeStop\", (i, w, h, _ref6) => {\n      let {\n        e,\n        node\n      } = _ref6;\n      const {\n        layout,\n        oldResizeItem\n      } = this.state;\n      const {\n        cols,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onResizeStop(newLayout, oldResizeItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldResizeItem: null,\n        oldLayout: null,\n        resizing: false\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    // Called while dragging an element. Part of browser native drag/drop API.\n    // Native event target might be the layout itself, or an element within the layout.\n    _defineProperty(this, \"onDragOver\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n\n      // we should ignore events from layout's children in Firefox\n      // to avoid unpredictable jumping of a dropping placeholder\n      // FIXME remove this hack\n      if (isFirefox &&\n      // $FlowIgnore can't figure this out\n      !e.nativeEvent.target?.classList.contains(layoutClassName)) {\n        return false;\n      }\n      const {\n        droppingItem,\n        onDropDragOver,\n        margin,\n        cols,\n        rowHeight,\n        maxRows,\n        width,\n        containerPadding,\n        transformScale\n      } = this.props;\n      // Allow user to customize the dropping item or short-circuit the drop based on the results\n      // of the `onDragOver(e: Event)` callback.\n      const onDragOverResult = onDropDragOver?.(e);\n      if (onDragOverResult === false) {\n        if (this.state.droppingDOMNode) {\n          this.removeDroppingPlaceholder();\n        }\n        return false;\n      }\n      const finalDroppingItem = {\n        ...droppingItem,\n        ...onDragOverResult\n      };\n      const {\n        layout\n      } = this.state;\n\n      // $FlowIgnore missing def\n      const gridRect = e.currentTarget.getBoundingClientRect(); // The grid's position in the viewport\n\n      // Calculate the mouse position relative to the grid\n      const layerX = e.clientX - gridRect.left;\n      const layerY = e.clientY - gridRect.top;\n      const droppingPosition = {\n        left: layerX / transformScale,\n        top: layerY / transformScale,\n        e\n      };\n      if (!this.state.droppingDOMNode) {\n        const positionParams /*: PositionParams*/ = {\n          cols,\n          margin,\n          maxRows,\n          rowHeight,\n          containerWidth: width,\n          containerPadding: containerPadding || margin\n        };\n        const calculatedPosition = (0, _calculateUtils.calcXY)(positionParams, layerY, layerX, finalDroppingItem.w, finalDroppingItem.h);\n        this.setState({\n          droppingDOMNode: /*#__PURE__*/React.createElement(\"div\", {\n            key: finalDroppingItem.i\n          }),\n          droppingPosition,\n          layout: [...layout, {\n            ...finalDroppingItem,\n            x: calculatedPosition.x,\n            y: calculatedPosition.y,\n            static: false,\n            isDraggable: true\n          }]\n        });\n      } else if (this.state.droppingPosition) {\n        const {\n          left,\n          top\n        } = this.state.droppingPosition;\n        const shouldUpdatePosition = left != layerX || top != layerY;\n        if (shouldUpdatePosition) {\n          this.setState({\n            droppingPosition\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"removeDroppingPlaceholder\", () => {\n      const {\n        droppingItem,\n        cols\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const newLayout = (0, _utils.compact)(layout.filter(l => l.i !== droppingItem.i), (0, _utils.compactType)(this.props), cols, this.props.allowOverlap);\n      this.setState({\n        layout: newLayout,\n        droppingDOMNode: null,\n        activeDrag: null,\n        droppingPosition: undefined\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter--;\n\n      // onDragLeave can be triggered on each layout's child.\n      // But we know that count of dragEnter and dragLeave events\n      // will be balanced after leaving the layout's container\n      // so we can increase and decrease count of dragEnter and\n      // when it'll be equal to 0 we'll remove the placeholder\n      if (this.dragEnterCounter === 0) {\n        this.removeDroppingPlaceholder();\n      }\n    });\n    _defineProperty(this, \"onDragEnter\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter++;\n    });\n    _defineProperty(this, \"onDrop\", (e /*: Event*/) => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      const {\n        droppingItem\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const item = layout.find(l => l.i === droppingItem.i);\n\n      // reset dragEnter counter on drop\n      this.dragEnterCounter = 0;\n      this.removeDroppingPlaceholder();\n      this.props.onDrop(layout, item, e);\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n  static getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State> | null*/{\n    let newLayoutBase;\n    if (prevState.activeDrag) {\n      return null;\n    }\n\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _fastEquals.deepEqual)(nextProps.layout, prevState.propsLayout) || nextProps.compactType !== prevState.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(nextProps.children, prevState.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = prevState.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, (0, _utils.compactType)(nextProps), nextProps.allowOverlap);\n      return {\n        layout: newLayout,\n        // We need to save these props to state for using\n        // getDerivedStateFromProps instead of componentDidMount (in which we would get extra rerender)\n        compactType: nextProps.compactType,\n        children: nextProps.children,\n        propsLayout: nextProps.layout\n      };\n    }\n    return null;\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    return (\n      // NOTE: this is almost always unequal. Therefore the only way to get better performance\n      // from SCU is if the user intentionally memoizes children. If they do, and they can\n      // handle changes properly, performance will increase.\n      this.props.children !== nextProps.children || !(0, _utils.fastRGLPropsEqual)(this.props, nextProps, _fastEquals.deepEqual) || this.state.activeDrag !== nextState.activeDrag || this.state.mounted !== nextState.mounted || this.state.droppingPosition !== nextState.droppingPosition\n    );\n  }\n  componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n    if (!this.state.activeDrag) {\n      const newLayout = this.state.layout;\n      const oldLayout = prevState.layout;\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() /*: ?string*/{\n    if (!this.props.autoSize) return;\n    const nbRow = (0, _utils.bottom)(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  }\n  onLayoutMaybeChanged(newLayout /*: Layout*/, oldLayout /*: ?Layout*/) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _fastEquals.deepEqual)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder() /*: ?ReactElement<any>*/{\n    const {\n      activeDrag\n    } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms,\n      transformScale\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: `react-grid-placeholder ${this.state.resizing ? \"placeholder-resizing\" : \"\"}`,\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      isBounded: false,\n      useCSSTransforms: useCSSTransforms,\n      transformScale: transformScale\n    }, /*#__PURE__*/React.createElement(\"div\", null));\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child /*: ReactElement<any>*/, isDroppingItem /*: boolean*/) /*: ?ReactElement<any>*/{\n    if (!child || !child.key) return;\n    const l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      isBounded,\n      useCSSTransforms,\n      transformScale,\n      draggableCancel,\n      draggableHandle,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const {\n      mounted,\n      droppingPosition\n    } = this.state;\n\n    // Determine user manipulations possible.\n    // If an item is static, it can't be manipulated by default.\n    // Any properties defined directly on the grid item will take precedence.\n    const draggable = typeof l.isDraggable === \"boolean\" ? l.isDraggable : !l.static && isDraggable;\n    const resizable = typeof l.isResizable === \"boolean\" ? l.isResizable : !l.static && isResizable;\n    const resizeHandlesOptions = l.resizeHandles || resizeHandles;\n\n    // isBounded set on child if set on parent, and child is not explicitly false\n    const bounded = draggable && isBounded && l.isBounded !== false;\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      isBounded: bounded,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      transformScale: transformScale,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      static: l.static,\n      droppingPosition: isDroppingItem ? droppingPosition : undefined,\n      resizeHandles: resizeHandlesOptions,\n      resizeHandle: resizeHandle\n    }, child);\n  }\n  render() /*: React.Element<\"div\">*/{\n    const {\n      className,\n      style,\n      isDroppable,\n      innerRef\n    } = this.props;\n    const mergedClassName = (0, _clsx.default)(layoutClassName, className);\n    const mergedStyle = {\n      height: this.containerHeight(),\n      ...style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: innerRef,\n      className: mergedClassName,\n      style: mergedStyle,\n      onDrop: isDroppable ? this.onDrop : _utils.noop,\n      onDragLeave: isDroppable ? this.onDragLeave : _utils.noop,\n      onDragEnter: isDroppable ? this.onDragEnter : _utils.noop,\n      onDragOver: isDroppable ? this.onDragOver : _utils.noop\n    }, React.Children.map(this.props.children, child => this.processGridItem(child)), isDroppable && this.state.droppingDOMNode && this.processGridItem(this.state.droppingDOMNode, true), this.placeholder());\n  }\n}\nexports.default = ReactGridLayout;\n// TODO publish internal ReactClass displayName transform\n_defineProperty(ReactGridLayout, \"displayName\", \"ReactGridLayout\");\n// Refactored to another module to make way for preval\n_defineProperty(ReactGridLayout, \"propTypes\", _ReactGridLayoutPropTypes.default);\n_defineProperty(ReactGridLayout, \"defaultProps\", {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isBounded: false,\n  isDraggable: true,\n  isResizable: true,\n  allowOverlap: false,\n  isDroppable: false,\n  useCSSTransforms: true,\n  transformScale: 1,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  droppingItem: {\n    i: \"__dropping-elem__\",\n    h: 1,\n    w: 1\n  },\n  resizeHandles: [\"se\"],\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop,\n  onDrop: _utils.noop,\n  onDropDragOver: _utils.noop\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}